Well, continuing in my problem I was finally able to produce the result I was looking for using the Fibonacci Lattice Golden Spiral as mentioned by Bread Fan. This article helped me a lot http://extremelearning.com.au/how-to-evenly-distribute-points-on-a-sphere-more-effectively-than-the-canonical-fibonacci-lattice/#:~:text=Mapping%20the%20Fibonacci%20lattice%20(aka,distribute%20points%20on%20a%20sphere

Here's my final code :

`for (let i = 0; i < myImages.length; i ++) {
    // Load images as texture
    imgtext.push(textureLoader.load(myimages[i]))
    imgtext[i].generateMipmaps = false

    // Create planeMaterial and map images texture
    let planeMaterial = new THREE.MeshBasicMaterial({ map: imgtext[i] })
        planeMaterial.side = THREE.DoubleSide
    let planeMesh  = new THREE.Mesh(planeGeometry, planeMaterial);

    // Position as sphere unsing Golden Spirale
    theta = 2 * Math.PI * i / goldNum // 1.618033988749895
    phi = Math.acos(1-2 * (i+ 0.5)/myImages.length )

    let positionSphere = new THREE.Spherical(50, phi, theta)

    planeMesh.position.setFromSpherical(positionSphere);
    planeMesh.lookAt(planeMesh.position.clone().setLength(3));

    scene.add(planeMesh);
}`

Thanks all for your kind help !